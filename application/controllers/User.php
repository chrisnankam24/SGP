<?php
defined('BASEPATH') OR exit('No direct script access allowed');

/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class User extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
    } 

    /*
     * Listing of users
     */
    function index()
    {
        $data['users'] = $this->User_model->get_all_users();

        $this->load->view('user/index',$data);
    }

    /*
     * Adding a new user
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'firstName' => $this->input->post('firstName'),
				'lastName' => $this->input->post('lastName'),
				'email' => $this->input->post('email'),
				'role' => $this->input->post('role'),
				'status' => $this->input->post('status'),
				'creationDateTime' => $this->input->post('creationDateTime'),
				'lastModifiedDateTime' => $this->input->post('lastModifiedDateTime'),
            );
            
            $user_id = $this->User_model->add_user($params);
            redirect('user/index');
        }
        else
        {
            $this->load->view('user/add');
        }
    }  

    /*
     * Editing a user
     */
    function edit($userId)
    {   
        // check if the user exists before trying to edit it
        $user = $this->User_model->get_user($userId);
        
        if(isset($user['userId']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'firstName' => $this->input->post('firstName'),
					'lastName' => $this->input->post('lastName'),
					'email' => $this->input->post('email'),
					'role' => $this->input->post('role'),
					'status' => $this->input->post('status'),
					'creationDateTime' => $this->input->post('creationDateTime'),
					'lastModifiedDateTime' => $this->input->post('lastModifiedDateTime'),
                );

                $this->User_model->update_user($userId,$params);            
                redirect('user/index');
            }
            else
            {   
                $data['user'] = $this->User_model->get_user($userId);
    
                $this->load->view('user/edit',$data);
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 

    /*
     * Deleting user
     */
    function remove($userId)
    {
        $user = $this->User_model->get_user($userId);

        // check if the user exists before trying to delete it
        if(isset($user['userId']))
        {
            $this->User_model->delete_user($userId);
            redirect('user/index');
        }
        else
            show_error('The user you are trying to delete does not exist.');
    }
    
}
