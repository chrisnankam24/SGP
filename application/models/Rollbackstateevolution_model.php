<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Rollbackstateevolution_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get rollbackstateevolution by rollbackId
     */
    function get_rollbackstateevolution($rollbackId)
    {
        return $this->db->get_where('rollbackstateevolution',array('rollbackId'=>$rollbackId))->result_array();
    }

    /*
     * Get rollbackstateevolution by rollbackId
     */
    function get_rse($rollbackId, $state)
    {
        return $this->db->get_where('rollbackstateevolution',array('rollbackId'=>$rollbackId, 'rollbackState' => $state))->result_array();
    }

    /*
     * Get all rollbackstateevolution
     */
    function get_all_rollbackstateevolution()
    {
        return $this->db->get('rollbackstateevolution')->result_array();
    }

    /*
     * function to add new rollbackstateevolution
     */
    function add_rollbackstateevolution($params)
    {
        $params = $this->reformatDates($params);
        $this->db->insert('rollbackstateevolution',$params);
        return $this->db->insert_id();
    }

    /*
     * function to update rollbackstateevolution
     */
    function update_rollbackstateevolution($rollbackStatevolutionId,$params)
    {
        $params = $this->reformatDates($params);
        $this->db->where('rollbackStatevolutionId',$rollbackStatevolutionId);
        $response = $this->db->update('rollbackstateevolution',$params);
        if($response)
        {
            return "rollbackstateevolution updated successfully";
        }
        else
        {
            return "Error occuring while updating rollbackstateevolution";
        }
    }

    /*
     * function to delete rollbackstateevolution
     */
    function delete_rollbackstateevolution($rollbackStatevolutionId)
    {
        $response = $this->db->delete('rollbackstateevolution',array('rollbackStatevolutionId'=>$rollbackStatevolutionId));
        if($response)
        {
            return "rollbackstateevolution deleted successfully";
        }
        else
        {
            return "Error occuring while deleting rollbackstateevolution";
        }
    }

    private function reformatDates($params){

        // Rollback State Evolution
        if(isset($params['lastChangeDateTime'])){
            $params['lastChangeDateTime'] = date('Y-m-d\TH:i:s', strtotime($params['lastChangeDateTime']));
        }

        return $params;

    }

}
