<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */

class ProcessNumber_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get processnumber by processId
     */
    function get_processnumber($processId)
    {
        return $this->db->get_where('processnumber',array('processId'=>$processId))->result_array();
    }

    /*
     * Get provisionnumber by processId
     */
    function get_provisionnumber($processId)
    {
        return $this->db->get_where('provisionnumber',array('processId'=>$processId))->result_array();
    }

    /*
     * Get all processnumber
     */
    function get_all_processnumber()
    {
        return $this->db->order_by('pLastChangeDateTime', 'desc')->get('processnumber')->result_array();
    }

    /*
     * function to add new processnumber
     */
    function add_processnumber($params)
    {
        $params = $this->reformatDates($params);
        $this->db->insert('processnumber',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update processnumber
     */
    function update_processnumber($processId, $msisdn, $params)
    {
        $params = $this->reformatDates($params);
        $this->db->where(array('processId' => $processId, 'msisdn' => $msisdn));
        $response = $this->db->update('processnumber',$params);
        if($response)
        {
            return "processnumber updated successfully";
        }
        else
        {
            return "Error occuring while updating processnumber";
        }
    }

    /*
     * function to update provisionnumber
     */
    function update_provisionnumber($provisionId, $msisdn, $params)
    {
        $params = $this->reformatDates($params);
        $this->db->where(array('processId' => $provisionId, 'msisdn' => $msisdn));
        $response = $this->db->update('provisionnumber',$params);
        if($response)
        {
            return "provisionnumber updated successfully";
        }
        else
        {
            return "Error occuring while updating provisionnumber";
        }
    }

    /*
     * function to update processnumber all
     */
    function update_processnumber_all($processId, $params)
    {
        $params = $this->reformatDates($params);
        $this->db->where(array('processId' => $processId));
        $response = $this->db->update('processnumber',$params);
        if($response)
        {
            return "processnumber updated successfully";
        }
        else
        {
            return "Error occuring while updating processnumber";
        }
    }

    /*
     * function to update provisionnumber all
     */
    function update_provisionnumber_all($provisionId, $params)
    {

        $params = $this->reformatDates($params);
        $this->db->where(array('processId' => $provisionId));
        $response = $this->db->update('provisionnumber',$params);
        if($response)
        {
            return "provisionnumber updated successfully";
        }
        else
        {
            return "Error occuring while updating provisionnumber";
        }
    }
    
    /*
     * function to delete processnumber
     */
    function delete_processnumber($processNumberId)
    {
        $response = $this->db->delete('processnumber',array('processNumberId'=>$processNumberId));
        if($response)
        {
            return "processnumber deleted successfully";
        }
        else
        {
            return "Error occuring while deleting processnumber";
        }
    }

    private function reformatDates($params){

        // Process Number
        if(isset($params['pLastChangeDateTime'])){
            $params['pLastChangeDateTime'] = date('Y-m-d\TH:i:s', strtotime($params['pLastChangeDateTime']));
        }

        return $params;

    }

}
