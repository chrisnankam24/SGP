CREATE TABLE Error (errorReportId varchar(30) NOT NULL, cadbNumber varchar(13) NOT NULL, problem varchar(255) NOT NULL, reporterNetworkId varchar(2) NOT NULL, submissionDateTime timestamp NOT NULL, nrnNetworkId varchar(2), nrnRoutingNumber varchar(8), routingChangeDateTime timestamp NULL, processType varchar(8), notificationMailSendStatus varchar(30) NOT NULL, notificationMailSendDateTime timestamp NULL, PRIMARY KEY (errorReportId));
CREATE TABLE Log (logId int(11) NOT NULL AUTO_INCREMENT, userId varchar(20) NOT NULL, actionPerformed varchar(255) NOT NULL, actionDateTime timestamp NOT NULL, PRIMARY KEY (logId));
CREATE TABLE NumberReturn (returnId varchar(30) NOT NULL, openDateTime timestamp NOT NULL, ownerNetworkId varchar(2) NOT NULL, ownerRoutingNumber varchar(8) NOT NULL, primaryOwnerNetworkId varchar(2) NOT NULL, primaryOwnerRoutingNumber varchar(8) NOT NULL, returnMSISDN varchar(13) NOT NULL, returnNumberState varchar(30) NOT NULL, notificationMailSendStatus varchar(30) NOT NULL, notificationMailSendDateTime timestamp NULL, numberReturnSubmissionId int(10), PRIMARY KEY (returnId));
CREATE TABLE NumberReturnStateEvolution (numberReturnStateEvolutionId int(10) NOT NULL AUTO_INCREMENT, returnNumberState varchar(30) NOT NULL, lastChangeDateTime timestamp NOT NULL, returnId varchar(30) NOT NULL, PRIMARY KEY (numberReturnStateEvolutionId));
CREATE TABLE NumberReturnSubmission (numberReturnSubmissionId int(10) NOT NULL AUTO_INCREMENT, primaryOwnerNetworkId varchar(2) NOT NULL, primaryOwnerNetworkNumber varchar(8) NOT NULL, returnMSISDN varchar(13) NOT NULL, submissionState varchar(30) NOT NULL, submissionDateTime timestamp NOT NULL, userId varchar(20) NOT NULL, PRIMARY KEY (numberReturnSubmissionId));
CREATE TABLE Porting (portingId varchar(30) NOT NULL, recipientNetworkId varchar(2) NOT NULL, recipientRoutingNumber varchar(8) NOT NULL, donorNetworkId varchar(2) NOT NULL, donorRoutingNumber varchar(8) NOT NULL, recipientSubmissionDateTime timestamp NOT NULL, portingDateTime timestamp NULL, rio varchar(12) NOT NULL, startMSISDN varchar(13) NOT NULL, endMSISDN varchar(13) NOT NULL, physicalPersonFirstName varchar(30), physicalPersonLastName varchar(30), physicalPersonIdNumber int(11), legalPersonName varchar(30), legalPersonTin varchar(10), contactNumber varchar(13), cadbOrderDateTime timestamp NOT NULL, lastChangeDateTime timestamp NOT NULL, portingState varchar(50) NOT NULL, contractId varchar(25) NOT NULL, language varchar(2) NOT NULL, notificationMailSendStatus varchar(30) NOT NULL, notificationMailSendDateTime timestamp NULL, portingSubmissionId int(10), PRIMARY KEY (portingId));
CREATE TABLE PortingDenyRejectionAbandon (portingDenyRejectionAbandonedId int(10) NOT NULL AUTO_INCREMENT, denyRejectionReason varchar(255), cause varchar(255) NOT NULL, portingId varchar(30) NOT NULL, PRIMARY KEY (portingDenyRejectionAbandonedId)) comment='Contains reasons for porting denial / rejection / abandoned which occurs either during DENY, REJECT or ABANDONED states. If process abandoned, cause will represent the abandoned cause. In this case, rejectionReason might be NULL. Otherwise, it can''t be NULL';
CREATE TABLE PortingSmsNotification (portingSmsNotificationId int(10) NOT NULL AUTO_INCREMENT, portingId varchar(30) NOT NULL, smsType varchar(30) NOT NULL, creationDateTime timestamp NOT NULL, sendDateTime timestamp NULL, status varchar(25) NOT NULL, attemptCount int(3) DEFAULT 0 NOT NULL, PRIMARY KEY (portingSmsNotificationId));
CREATE TABLE PortingStateEvolution (portingStateEvolutionId int(10) NOT NULL AUTO_INCREMENT, lastChangeDateTime timestamp NOT NULL, portingState varchar(50) NOT NULL, isAutoReached tinyint(1) NOT NULL, portingId varchar(30) NOT NULL, PRIMARY KEY (portingStateEvolutionId));
CREATE TABLE PortingSubmission (portingSubmissionId int(10) NOT NULL AUTO_INCREMENT, donorNetworkId varchar(2) NOT NULL, donorRoutingNumber varchar(8) NOT NULL, subscriberSubmissionDateTime timestamp NOT NULL, portingDateTime timestamp NOT NULL, rio varchar(12) NOT NULL, documentType varchar(30) NOT NULL, portingMSISDN varchar(13) NOT NULL, physicalPersonIdNumber int(11), physicalPersonFirstName varchar(30), physicalPersonLastName varchar(30), legalPersonName varchar(60), legalPersonTin varchar(10), contactNumber varchar(10), contractId varchar(25) NOT NULL, language varchar(2) NOT NULL, temporalMSISDN varchar(13) NOT NULL, submissionState varchar(255) DEFAULT 'STARTED' NOT NULL comment 'Holds the current (at the time of consultation) state of the submission. Its values can be STARTED, ORDERED or ABORTED', orderedDateTime timestamp NULL, userId varchar(20) NOT NULL, PRIMARY KEY (portingSubmissionId)) comment='Table filled when a submission is made by OPR agent. It holds the submission date and time, the last ordered date time, the subscriber''s MSISDN, the Id number if physical person or Tin if legal person.
The Physical person Id or Tin is used to link with the Porting table row involved (this is within 2 months).';
CREATE TABLE Provisioning (processId varchar(30) NOT NULL, endNetworkId varchar(2) NOT NULL, endRoutingNumber varchar(8) NOT NULL, subscriberMSISDN varchar(13) NOT NULL, routingChangeDateTime timestamp NOT NULL, processType varchar(8) NOT NULL, provisionState varchar(8) NOT NULL, PRIMARY KEY (processId)) comment='end% info will correspond to OPR in porting scenario or primary owner in return scenario or OPD in rollback scenario.
In these scenarios, all other actors take proper actions only at the reception of notifyRoutingData message.';
CREATE TABLE ReturnRejection (returnRejectionId int(10) NOT NULL AUTO_INCREMENT, cause varchar(255) NOT NULL, returnId varchar(30) NOT NULL, PRIMARY KEY (returnRejectionId));
CREATE TABLE `Rollback` (rollbackId varchar(30) NOT NULL, originalPortingId varchar(30) NOT NULL, donorSubmissionDateTime timestamp NOT NULL, preferredRollbackDateTime timestamp NOT NULL, rollbackDateTime timestamp NULL, cadbOpenDateTime timestamp NOT NULL, lastChangeDateTime timestamp NOT NULL, rollbackState varchar(50) NOT NULL, notificationMailSendStatus varchar(30) NOT NULL, notificationMailSendDateTime timestamp NULL, rollbackSubmissionId int(10), PRIMARY KEY (rollbackId));
CREATE TABLE RollbackRejectionAbandon (rollbackRejectionAbandonedId int(10) NOT NULL AUTO_INCREMENT, rejectionReason varchar(255), cause varchar(255) NOT NULL, rollbackId varchar(30) NOT NULL, PRIMARY KEY (rollbackRejectionAbandonedId));
CREATE TABLE RollbackSmsNotification (rollbackSmsNotificationId int(10) NOT NULL AUTO_INCREMENT, rollbackId varchar(30) NOT NULL, smsType varchar(30) NOT NULL 	, creationDateTime timestamp NOT NULL, sendDateTime timestamp NULL, status varchar(25) NOT NULL, attemptCount int(3) NOT NULL, PRIMARY KEY (rollbackSmsNotificationId));
CREATE TABLE RollbackStateEvolution (rollbackStatevolutionId int(10) NOT NULL AUTO_INCREMENT, rollbackState varchar(30) NOT NULL, lastChangeDateTime timestamp NOT NULL, isAutoReached tinyint(1) NOT NULL, rollbackId varchar(30) NOT NULL, PRIMARY KEY (rollbackStatevolutionId));
CREATE TABLE RollbackSubmission (rollbackSubmissionId int(10) NOT NULL AUTO_INCREMENT, originalPortingId varchar(30) NOT NULL, preferredRollbackDateTime timestamp NOT NULL, submissionState varchar(8) NOT NULL 	, openedDateTime timestamp NULL, contractId varchar(25) NOT NULL, language varchar(2) NOT NULL, temporalMSISDN varchar(13) NOT NULL, userId varchar(20) NOT NULL, PRIMARY KEY (rollbackSubmissionId));
CREATE TABLE Users (userId varchar(20) NOT NULL, firstName varchar(30) NOT NULL, lastName varchar(30) NOT NULL, email varchar(30) NOT NULL, role int(2) NOT NULL, status tinyint(1) NOT NULL, creationDateTime timestamp NOT NULL, lastModifiedDateTime timestamp NOT NULL, PRIMARY KEY (userId));
CREATE TABLE USSDSmsNotification (ussdSmsNotificationId int(11) NOT NULL AUTO_INCREMENT, message varchar(255) NOT NULL, msisdn varchar(13) NOT NULL, creationDateTime timestamp NOT NULL, sendDateTime timestamp NULL, status varchar(25) NOT NULL, attemptCount int(3) NOT NULL, PRIMARY KEY (ussdSmsNotificationId));
ALTER TABLE NumberReturnSubmission ADD INDEX FKNumberRetu899864 (userId), ADD CONSTRAINT FKNumberRetu899864 FOREIGN KEY (userId) REFERENCES Users (userId);
ALTER TABLE RollbackSubmission ADD INDEX FKRollbackSu109941 (userId), ADD CONSTRAINT FKRollbackSu109941 FOREIGN KEY (userId) REFERENCES Users (userId);
ALTER TABLE PortingSubmission ADD INDEX FKPortingSub695331 (userId), ADD CONSTRAINT FKPortingSub695331 FOREIGN KEY (userId) REFERENCES Users (userId);
ALTER TABLE Log ADD INDEX FKLog960861 (userId), ADD CONSTRAINT FKLog960861 FOREIGN KEY (userId) REFERENCES Users (userId);
ALTER TABLE RollbackSubmission ADD INDEX FKRollbackSu314861 (originalPortingId), ADD CONSTRAINT FKRollbackSu314861 FOREIGN KEY (originalPortingId) REFERENCES Porting (portingId);
ALTER TABLE `Rollback` ADD INDEX FKRollback555103 (rollbackSubmissionId), ADD CONSTRAINT FKRollback555103 FOREIGN KEY (rollbackSubmissionId) REFERENCES RollbackSubmission (rollbackSubmissionId);
ALTER TABLE RollbackRejectionAbandon ADD INDEX FKRollbackRe746895 (rollbackId), ADD CONSTRAINT FKRollbackRe746895 FOREIGN KEY (rollbackId) REFERENCES `Rollback` (rollbackId);
ALTER TABLE NumberReturnStateEvolution ADD INDEX FKNumberRetu871647 (returnId), ADD CONSTRAINT FKNumberRetu871647 FOREIGN KEY (returnId) REFERENCES NumberReturn (returnId);
ALTER TABLE NumberReturn ADD INDEX FKNumberRetu598213 (numberReturnSubmissionId), ADD CONSTRAINT FKNumberRetu598213 FOREIGN KEY (numberReturnSubmissionId) REFERENCES NumberReturnSubmission (numberReturnSubmissionId);
ALTER TABLE ReturnRejection ADD INDEX FKReturnReje600376 (returnId), ADD CONSTRAINT FKReturnReje600376 FOREIGN KEY (returnId) REFERENCES NumberReturn (returnId);
ALTER TABLE RollbackSmsNotification ADD INDEX FKRollbackSm427866 (rollbackId), ADD CONSTRAINT FKRollbackSm427866 FOREIGN KEY (rollbackId) REFERENCES `Rollback` (rollbackId);
ALTER TABLE `Rollback` ADD INDEX FKRollback311841 (originalPortingId), ADD CONSTRAINT FKRollback311841 FOREIGN KEY (originalPortingId) REFERENCES Porting (portingId);
ALTER TABLE RollbackStateEvolution ADD INDEX FKRollbackSt629899 (rollbackId), ADD CONSTRAINT FKRollbackSt629899 FOREIGN KEY (rollbackId) REFERENCES `Rollback` (rollbackId);
ALTER TABLE PortingSmsNotification ADD INDEX FKPortingSms948116 (portingId), ADD CONSTRAINT FKPortingSms948116 FOREIGN KEY (portingId) REFERENCES Porting (portingId);
ALTER TABLE PortingDenyRejectionAbandon ADD INDEX FKPortingDen964000 (portingId), ADD CONSTRAINT FKPortingDen964000 FOREIGN KEY (portingId) REFERENCES Porting (portingId);
ALTER TABLE Porting ADD INDEX FKPorting459809 (portingSubmissionId), ADD CONSTRAINT FKPorting459809 FOREIGN KEY (portingSubmissionId) REFERENCES PortingSubmission (portingSubmissionId);
ALTER TABLE PortingStateEvolution ADD INDEX FKPortingSta815839 (portingId), ADD CONSTRAINT FKPortingSta815839 FOREIGN KEY (portingId) REFERENCES Porting (portingId);
